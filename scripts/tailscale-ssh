#!/usr/bin/env bash

# Detect OS and set appropriate Tailscale binary path
if [[ "$OSTYPE" == "darwin"* ]]; then
    TAILSCALE_BIN="/Applications/Tailscale.app/Contents/MacOS/Tailscale"
else
    # Linux and other systems - use tailscale from PATH
    TAILSCALE_BIN="tailscale"
fi

GREEN='\033[0;32m'
RESET='\033[0m'

get_hosts() {
    $TAILSCALE_BIN status | grep -v "^#" | awk '
    function human_bytes(bytes) {
        if (bytes >= 1073741824) return sprintf("%.1fGB", bytes/1073741824)
        if (bytes >= 1048576) return sprintf("%.1fMB", bytes/1048576)
        if (bytes >= 1024) return sprintf("%.1fKB", bytes/1024)
        return bytes "B"
    }
    {
        hostname=$2
        os=$4
        status=""
        for(i=5; i<=NF; i++) {
            word=$i
            # Convert tx/rx bytes to human readable
            if (word ~ /^tx$/ && $(i+1) ~ /^[0-9]+$/) {
                status = status (status ? " " : "") "tx:" human_bytes($(i+1))
                i++
            } else if (word ~ /^rx$/ && $(i+1) ~ /^[0-9]+$/) {
                status = status (status ? " " : "") "rx:" human_bytes($(i+1))
                i++
            } else if (word != "-") {
                status = status (status ? " " : "") word
            }
        }
        if (status == "" || status == "-") status="online"
        printf "%-20s | %-8s | %s\n", hostname, os, status
    }'
}

selected=$(get_hosts | fzf \
    --color=16 \
    --prompt=">> Liaison online, select host for transfer: " \
    --cycle \
    --bind "shift-tab:up,tab:down" \
    --bind "change:top")

if [[ -z $selected ]]; then
    exit 0
fi

hostname=$(echo "$selected" | awk '{print $1}')

echo -ne "${GREEN}>> identity${RESET} [$USER]: "
read username

ssh_opts=()
if [[ -n $TMUX ]]; then
    ssh_opts+=(-o "SendEnv TMUX")
fi
if [[ -n $NVIM_THEME ]]; then
    ssh_opts+=(-o "SendEnv NVIM_THEME")
fi

if [[ -z $username ]]; then
    echo -e "${GREEN}>> establishing network link to $hostname...${RESET}"
    ssh "${ssh_opts[@]}" "$hostname"
    exit_code=$?
else
    echo -e "${GREEN}>> establishing network link to $hostname as $username...${RESET}"
    ssh "${ssh_opts[@]}" "$username@$hostname"
    exit_code=$?
fi

if [[ $exit_code -ne 0 ]]; then
    RED='\033[0;31m'
    echo -e "${RED}>> connection failed: unable to establish link to $hostname (exit code: $exit_code)${RESET}"
    exit $exit_code
fi
